services:
  app:
    build:
      context: ./eventus_core
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/eventus
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: test
      SPRING_DATA_REDIS_HOST: redis
  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: test
      POSTGRES_DB: eventus

  redis:
    image: redis:7.0-alpine         # 가벼운 Alpine 기반 Redis
    container_name: redis
    ports:
      - "6379:6379"                 # 호스트 6379 → 컨테이너 6379
    volumes:
      - redis-data:/data            # 데이터 영속화
    command: [ "redis-server", "--appendonly", "yes" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

#  zookeeper:
#    image: bitnami/zookeeper:3.9.2
#    ports:
#      - "2181:2181"
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: "yes"
#    healthcheck:
#      test: [ "CMD", "zkServer.sh", "status" ]
#      interval: 10s
#      retries: 5
#      timeout: 5s
#
#  kafka:
#    image: bitnami/kafka:3.4.0
#    depends_on:
#      zookeeper:
#        condition: service_healthy
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#
#  rabbitmq:
#    image: rabbitmq:3-management
#    ports:
#      - "5672:5672"
#      - "15672:15672"

  # (기존 kafka, zookeeper, rabbitmq 서비스도 여기에 나란히 둡니다)

volumes:
  redis-data:
    driver: local